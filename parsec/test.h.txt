FileAST:  (at None)
  Typedef: name=ENUM_DATA, quals=[], storage=['typedef'] (at test.h:4:3)
    TypeDecl: declname=ENUM_DATA, quals=[] (at test.h:4:3)
      Enum: name=_enum_data (at test.h:1:9)
        EnumeratorList:  (at test.h:3:2)
          Enumerator: name=e1 (at test.h:3:2)
            Constant: type=int, value=1 (at test.h:3:7)
          Enumerator: name=e2 (at test.h:3:10)
          Enumerator: name=e3 (at test.h:3:14)
  Typedef: name=MY_SIMPLE, quals=[], storage=['typedef'] (at test.h:10:3)
    TypeDecl: declname=MY_SIMPLE, quals=[] (at test.h:10:3)
      Struct: name=_my_simple (at test.h:6:16)
        Decl: name=simp1, quals=[], storage=[], funcspec=[] (at test.h:8:7)
          ArrayDecl: dim_quals=[] (at test.h:8:7)
            TypeDecl: declname=simp1, quals=[] (at test.h:8:7)
              IdentifierType: names=['char'] (at test.h:8:2)
            BinaryOp: op=- (at test.h:8:14)
              BinaryOp: op=+ (at test.h:8:14)
                BinaryOp: op=/ (at test.h:8:14)
                  BinaryOp: op=* (at test.h:8:14)
                    Constant: type=int, value=12 (at test.h:8:14)
                    Constant: type=int, value=2 (at test.h:8:17)
                  Constant: type=int, value=2 (at test.h:8:20)
                Constant: type=int, value=1 (at test.h:8:24)
              Constant: type=int, value=2 (at test.h:8:28)
        Decl: name=simp2, quals=[], storage=[], funcspec=[] (at test.h:9:7)
          TypeDecl: declname=simp2, quals=[] (at test.h:9:7)
            IdentifierType: names=['int'] (at test.h:9:2)
  Decl: name=None, quals=[], storage=[], funcspec=[] (at test.h:12:8)
    Struct: name=_plain_struct (at test.h:12:8)
      Decl: name=a1, quals=[], storage=[], funcspec=[] (at test.h:14:9)
        TypeDecl: declname=a1, quals=[] (at test.h:14:9)
          IdentifierType: names=['double'] (at test.h:14:2)
      Decl: name=a2, quals=[], storage=[], funcspec=[] (at test.h:15:9)
        ArrayDecl: dim_quals=[] (at test.h:15:9)
          TypeDecl: declname=a2, quals=[] (at test.h:15:9)
            IdentifierType: names=['long'] (at test.h:15:2)
          Constant: type=int, value=5 (at test.h:15:12)
  Typedef: name=TEST_UNION, quals=[], storage=['typedef'] (at test.h:22:3)
    TypeDecl: declname=TEST_UNION, quals=[] (at test.h:22:3)
      Union: name=_test_union (at test.h:18:15)
        Decl: name=simp1, quals=[], storage=[], funcspec=[] (at test.h:20:7)
          ArrayDecl: dim_quals=[] (at test.h:20:7)
            TypeDecl: declname=simp1, quals=[] (at test.h:20:7)
              IdentifierType: names=['char'] (at test.h:20:2)
            Constant: type=int, value=12 (at test.h:20:13)
        Decl: name=simp2, quals=[], storage=[], funcspec=[] (at test.h:21:7)
          TypeDecl: declname=simp2, quals=[] (at test.h:21:7)
            IdentifierType: names=['int'] (at test.h:21:2)
  Typedef: name=MYINT, quals=[], storage=['typedef'] (at test.h:24:13)
    TypeDecl: declname=MYINT, quals=[] (at test.h:24:13)
      IdentifierType: names=['int'] (at test.h:24:9)
  Typedef: name=MY_STRUCT, quals=[], storage=['typedef'] (at test.h:64:3)
    TypeDecl: declname=MY_STRUCT, quals=[] (at test.h:64:3)
      Struct: name=_my_struct (at test.h:26:16)
        Decl: name=ms, quals=[], storage=[], funcspec=[] (at test.h:28:12)
          TypeDecl: declname=ms, quals=[] (at test.h:28:12)
            IdentifierType: names=['MY_SIMPLE'] (at test.h:28:2)
        Decl: name=mi, quals=[], storage=[], funcspec=[] (at test.h:29:8)
          TypeDecl: declname=mi, quals=[] (at test.h:29:8)
            IdentifierType: names=['MYINT'] (at test.h:29:2)
        Decl: name=msa, quals=[], storage=[], funcspec=[] (at test.h:30:12)
          ArrayDecl: dim_quals=[] (at test.h:30:12)
            TypeDecl: declname=msa, quals=[] (at test.h:30:12)
              IdentifierType: names=['MY_SIMPLE'] (at test.h:30:2)
            Constant: type=int, value=5 (at test.h:30:16)
        Decl: name=e, quals=[], storage=[], funcspec=[] (at test.h:31:12)
          TypeDecl: declname=e, quals=[] (at test.h:31:12)
            IdentifierType: names=['ENUM_DATA'] (at test.h:31:2)
        Decl: name=sms, quals=[], storage=[], funcspec=[] (at test.h:33:20)
          TypeDecl: declname=sms, quals=[] (at test.h:33:20)
            Struct: name=_my_simple (at test.h:33:9)
        Decl: name=bf, quals=[], storage=[], funcspec=[] (at test.h:42:4)
          TypeDecl: declname=bf, quals=[] (at test.h:42:4)
            Struct: name=_bitfield (at test.h:35:9)
              Decl: name=bf1, quals=[], storage=[], funcspec=[] (at test.h:37:7)
                TypeDecl: declname=bf1, quals=[] (at test.h:37:7)
                  IdentifierType: names=['int'] (at test.h:37:3)
                Constant: type=int, value=1 (at test.h:37:13)
              Decl: name=bf2, quals=[], storage=[], funcspec=[] (at test.h:38:7)
                TypeDecl: declname=bf2, quals=[] (at test.h:38:7)
                  IdentifierType: names=['int'] (at test.h:38:3)
                Constant: type=int, value=1 (at test.h:38:13)
              Decl: name=bf3, quals=[], storage=[], funcspec=[] (at test.h:39:7)
                TypeDecl: declname=bf3, quals=[] (at test.h:39:7)
                  IdentifierType: names=['int'] (at test.h:39:3)
                Constant: type=int, value=5 (at test.h:39:13)
              Decl: name=bf4, quals=[], storage=[], funcspec=[] (at test.h:40:7)
                TypeDecl: declname=bf4, quals=[] (at test.h:40:7)
                  IdentifierType: names=['int'] (at test.h:40:3)
                Constant: type=int, value=5 (at test.h:40:13)
              Decl: name=bf5, quals=[], storage=[], funcspec=[] (at test.h:41:7)
                TypeDecl: declname=bf5, quals=[] (at test.h:41:7)
                  IdentifierType: names=['int'] (at test.h:41:3)
        Decl: name=why, quals=[], storage=[], funcspec=[] (at test.h:47:4)
          TypeDecl: declname=why, quals=[] (at test.h:47:4)
            Struct: name=_inline_struct (at test.h:44:9)
              Decl: name=a, quals=[], storage=[], funcspec=[] (at test.h:46:7)
                TypeDecl: declname=a, quals=[] (at test.h:46:7)
                  IdentifierType: names=['int'] (at test.h:46:3)
              Decl: name=b, quals=[], storage=[], funcspec=[] (at test.h:46:10)
                TypeDecl: declname=b, quals=[] (at test.h:46:10)
                  IdentifierType: names=['int'] (at test.h:46:3)
              Decl: name=c, quals=[], storage=[], funcspec=[] (at test.h:46:13)
                TypeDecl: declname=c, quals=[] (at test.h:46:13)
                  IdentifierType: names=['int'] (at test.h:46:3)
        Decl: name=why2, quals=[], storage=[], funcspec=[] (at test.h:51:4)
          ArrayDecl: dim_quals=[] (at test.h:51:4)
            TypeDecl: declname=why2, quals=[] (at test.h:51:4)
              Struct: name=_inline_struct2 (at test.h:48:9)
                Decl: name=a, quals=[], storage=[], funcspec=[] (at test.h:50:7)
                  TypeDecl: declname=a, quals=[] (at test.h:50:7)
                    IdentifierType: names=['int'] (at test.h:50:3)
                Decl: name=b, quals=[], storage=[], funcspec=[] (at test.h:50:10)
                  TypeDecl: declname=b, quals=[] (at test.h:50:10)
                    IdentifierType: names=['int'] (at test.h:50:3)
                Decl: name=c, quals=[], storage=[], funcspec=[] (at test.h:50:13)
                  TypeDecl: declname=c, quals=[] (at test.h:50:13)
                    IdentifierType: names=['int'] (at test.h:50:3)
            Constant: type=int, value=5 (at test.h:51:9)
        Decl: name=ch1, quals=[], storage=[], funcspec=[] (at test.h:52:7)
          TypeDecl: declname=ch1, quals=[] (at test.h:52:7)
            IdentifierType: names=['char'] (at test.h:52:2)
        Decl: name=in1, quals=[], storage=[], funcspec=[] (at test.h:53:7)
          TypeDecl: declname=in1, quals=[] (at test.h:53:7)
            IdentifierType: names=['int'] (at test.h:53:2)
        Decl: name=l1, quals=[], storage=[], funcspec=[] (at test.h:54:7)
          TypeDecl: declname=l1, quals=[] (at test.h:54:7)
            IdentifierType: names=['long'] (at test.h:54:2)
        Decl: name=s1, quals=[], storage=[], funcspec=[] (at test.h:55:8)
          TypeDecl: declname=s1, quals=[] (at test.h:55:8)
            IdentifierType: names=['short'] (at test.h:55:2)
        Decl: name=us1, quals=[], storage=[], funcspec=[] (at test.h:56:17)
          TypeDecl: declname=us1, quals=[] (at test.h:56:17)
            IdentifierType: names=['unsigned', 'short'] (at test.h:56:2)
        Decl: name=f1, quals=[], storage=[], funcspec=[] (at test.h:57:8)
          TypeDecl: declname=f1, quals=[] (at test.h:57:8)
            IdentifierType: names=['float'] (at test.h:57:2)
        Decl: name=d1, quals=[], storage=[], funcspec=[] (at test.h:58:9)
          TypeDecl: declname=d1, quals=[] (at test.h:58:9)
            IdentifierType: names=['double'] (at test.h:58:2)
        Decl: name=ll1, quals=[], storage=[], funcspec=[] (at test.h:59:12)
          TypeDecl: declname=ll1, quals=[] (at test.h:59:12)
            IdentifierType: names=['long', 'long'] (at test.h:59:2)
        Decl: name=ain1, quals=[], storage=[], funcspec=[] (at test.h:61:6)
          ArrayDecl: dim_quals=[] (at test.h:61:6)
            TypeDecl: declname=ain1, quals=[] (at test.h:61:6)
              IdentifierType: names=['int'] (at test.h:61:2)
            Constant: type=int, value=10 (at test.h:61:11)
        Decl: name=str, quals=[], storage=[], funcspec=[] (at test.h:62:7)
          ArrayDecl: dim_quals=[] (at test.h:62:7)
            TypeDecl: declname=str, quals=[] (at test.h:62:7)
              IdentifierType: names=['char'] (at test.h:62:2)
            BinaryOp: op=+ (at test.h:62:11)
              Constant: type=int, value=10 (at test.h:62:11)
              Constant: type=int, value=1 (at test.h:62:16)
  Typedef: name=T2, quals=[], storage=['typedef'] (at test.h:69:3)
    TypeDecl: declname=T2, quals=[] (at test.h:69:3)
      Struct: name=_t2 (at test.h:66:16)
        Decl: name=t2int, quals=[], storage=[], funcspec=[] (at test.h:68:6)
          TypeDecl: declname=t2int, quals=[] (at test.h:68:6)
            IdentifierType: names=['int'] (at test.h:68:2)
  Typedef: name=T1, quals=[], storage=['typedef'] (at test.h:75:3)
    TypeDecl: declname=T1, quals=[] (at test.h:75:3)
      Struct: name=_t1 (at test.h:71:16)
        Decl: name=i1, quals=[], storage=[], funcspec=[] (at test.h:73:6)
          TypeDecl: declname=i1, quals=[] (at test.h:73:6)
            IdentifierType: names=['int'] (at test.h:73:2)
        Decl: name=t2_array, quals=[], storage=[], funcspec=[] (at test.h:74:5)
          ArrayDecl: dim_quals=[] (at test.h:74:5)
            TypeDecl: declname=t2_array, quals=[] (at test.h:74:5)
              IdentifierType: names=['T2'] (at test.h:74:2)
            Constant: type=int, value=5 (at test.h:74:14)
  Decl: name=x, quals=[], storage=[], funcspec=[] (at test.h:77:6)
    FuncDecl:  (at test.h:77:6)
      ParamList:  (at test.h:0:1)
        Typename: name=None, quals=[] (at test.h:0:1)
          TypeDecl: declname=None, quals=[] (at None)
            IdentifierType: names=['void'] (at test.h:77:8)
      TypeDecl: declname=x, quals=[] (at test.h:77:6)
        IdentifierType: names=['void'] (at test.h:77:1)