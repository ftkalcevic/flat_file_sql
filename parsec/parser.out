Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> select
Rule 2     query -> LP query RP
Rule 3     select -> SELECT list FROM table WHERE lst
Rule 4     select -> SELECT list FROM table
Rule 5     table -> NAME
Rule 6     table -> LP query RP
Rule 7     table -> NAME AS NAME
Rule 8     table -> table AS NAME
Rule 9     lst -> condition
Rule 10    lst -> condition AND condition
Rule 11    lst -> condition OR condition
Rule 12    lst -> NAME BETWEEN NUMBER AND NUMBER
Rule 13    condition -> NAME > NUMBER
Rule 14    condition -> NAME < NUMBER
Rule 15    condition -> NAME = NUMBER
Rule 16    condition -> NAME > NAME
Rule 17    condition -> NAME < NAME
Rule 18    condition -> NAME = NAME
Rule 19    condition -> list > list
Rule 20    condition -> list < list
Rule 21    condition -> list = list
Rule 22    condition -> list > NUMBER
Rule 23    condition -> list < NUMBER
Rule 24    condition -> list = NUMBER
Rule 25    list -> *
Rule 26    list -> NAME
Rule 27    list -> NAME DOT NAME
Rule 28    list -> list COMMA list
Rule 29    list -> list AND NAME
Rule 30    list -> list OR NAME

Terminals, with rules where they appear

*                    : 25
<                    : 14 17 20 23
=                    : 15 18 21 24
>                    : 13 16 19 22
AND                  : 10 12 29
AS                   : 7 8
BETWEEN              : 12
COMMA                : 28
DOT                  : 27
FROM                 : 3 4
LP                   : 2 6
NAME                 : 5 7 7 8 12 13 14 15 16 16 17 17 18 18 26 27 27 29 30
NUMBER               : 12 12 13 14 15 22 23 24
OR                   : 11 30
RP                   : 2 6
SELECT               : 3 4
WHERE                : 3
error                : 

Nonterminals, with rules where they appear

condition            : 9 10 10 11 11
list                 : 3 4 19 19 20 20 21 21 22 23 24 28 28 29 30
lst                  : 3
query                : 2 6 0
select               : 1
table                : 3 4 8

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . select
    (2) query -> . LP query RP
    (3) select -> . SELECT list FROM table WHERE lst
    (4) select -> . SELECT list FROM table

    LP              shift and go to state 3
    SELECT          shift and go to state 4

    query                          shift and go to state 1
    select                         shift and go to state 2

state 1

    (0) S' -> query .



state 2

    (1) query -> select .

    $end            reduce using rule 1 (query -> select .)
    RP              reduce using rule 1 (query -> select .)


state 3

    (2) query -> LP . query RP
    (1) query -> . select
    (2) query -> . LP query RP
    (3) select -> . SELECT list FROM table WHERE lst
    (4) select -> . SELECT list FROM table

    LP              shift and go to state 3
    SELECT          shift and go to state 4

    query                          shift and go to state 5
    select                         shift and go to state 2

state 4

    (3) select -> SELECT . list FROM table WHERE lst
    (4) select -> SELECT . list FROM table
    (25) list -> . *
    (26) list -> . NAME
    (27) list -> . NAME DOT NAME
    (28) list -> . list COMMA list
    (29) list -> . list AND NAME
    (30) list -> . list OR NAME

    *               shift and go to state 7
    NAME            shift and go to state 8

    list                           shift and go to state 6

state 5

    (2) query -> LP query . RP

    RP              shift and go to state 9


state 6

    (3) select -> SELECT list . FROM table WHERE lst
    (4) select -> SELECT list . FROM table
    (28) list -> list . COMMA list
    (29) list -> list . AND NAME
    (30) list -> list . OR NAME

    FROM            shift and go to state 10
    COMMA           shift and go to state 11
    AND             shift and go to state 12
    OR              shift and go to state 13


state 7

    (25) list -> * .

    FROM            reduce using rule 25 (list -> * .)
    COMMA           reduce using rule 25 (list -> * .)
    AND             reduce using rule 25 (list -> * .)
    OR              reduce using rule 25 (list -> * .)
    >               reduce using rule 25 (list -> * .)
    <               reduce using rule 25 (list -> * .)
    =               reduce using rule 25 (list -> * .)
    $end            reduce using rule 25 (list -> * .)
    RP              reduce using rule 25 (list -> * .)


state 8

    (26) list -> NAME .
    (27) list -> NAME . DOT NAME

    FROM            reduce using rule 26 (list -> NAME .)
    COMMA           reduce using rule 26 (list -> NAME .)
    AND             reduce using rule 26 (list -> NAME .)
    OR              reduce using rule 26 (list -> NAME .)
    >               reduce using rule 26 (list -> NAME .)
    <               reduce using rule 26 (list -> NAME .)
    =               reduce using rule 26 (list -> NAME .)
    $end            reduce using rule 26 (list -> NAME .)
    RP              reduce using rule 26 (list -> NAME .)
    DOT             shift and go to state 14


state 9

    (2) query -> LP query RP .

    $end            reduce using rule 2 (query -> LP query RP .)
    RP              reduce using rule 2 (query -> LP query RP .)


state 10

    (3) select -> SELECT list FROM . table WHERE lst
    (4) select -> SELECT list FROM . table
    (5) table -> . NAME
    (6) table -> . LP query RP
    (7) table -> . NAME AS NAME
    (8) table -> . table AS NAME

    NAME            shift and go to state 16
    LP              shift and go to state 17

    table                          shift and go to state 15

state 11

    (28) list -> list COMMA . list
    (25) list -> . *
    (26) list -> . NAME
    (27) list -> . NAME DOT NAME
    (28) list -> . list COMMA list
    (29) list -> . list AND NAME
    (30) list -> . list OR NAME

    *               shift and go to state 7
    NAME            shift and go to state 8

    list                           shift and go to state 18

state 12

    (29) list -> list AND . NAME

    NAME            shift and go to state 19


state 13

    (30) list -> list OR . NAME

    NAME            shift and go to state 20


state 14

    (27) list -> NAME DOT . NAME

    NAME            shift and go to state 21


state 15

    (3) select -> SELECT list FROM table . WHERE lst
    (4) select -> SELECT list FROM table .
    (8) table -> table . AS NAME

    WHERE           shift and go to state 22
    $end            reduce using rule 4 (select -> SELECT list FROM table .)
    RP              reduce using rule 4 (select -> SELECT list FROM table .)
    AS              shift and go to state 23


state 16

    (5) table -> NAME .
    (7) table -> NAME . AS NAME

  ! shift/reduce conflict for AS resolved as shift
    WHERE           reduce using rule 5 (table -> NAME .)
    $end            reduce using rule 5 (table -> NAME .)
    RP              reduce using rule 5 (table -> NAME .)
    AS              shift and go to state 24

  ! AS              [ reduce using rule 5 (table -> NAME .) ]


state 17

    (6) table -> LP . query RP
    (1) query -> . select
    (2) query -> . LP query RP
    (3) select -> . SELECT list FROM table WHERE lst
    (4) select -> . SELECT list FROM table

    LP              shift and go to state 3
    SELECT          shift and go to state 4

    query                          shift and go to state 25
    select                         shift and go to state 2

state 18

    (28) list -> list COMMA list .
    (28) list -> list . COMMA list
    (29) list -> list . AND NAME
    (30) list -> list . OR NAME

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    FROM            reduce using rule 28 (list -> list COMMA list .)
    >               reduce using rule 28 (list -> list COMMA list .)
    <               reduce using rule 28 (list -> list COMMA list .)
    =               reduce using rule 28 (list -> list COMMA list .)
    $end            reduce using rule 28 (list -> list COMMA list .)
    RP              reduce using rule 28 (list -> list COMMA list .)
    COMMA           shift and go to state 11
    AND             shift and go to state 12
    OR              shift and go to state 13

  ! COMMA           [ reduce using rule 28 (list -> list COMMA list .) ]
  ! AND             [ reduce using rule 28 (list -> list COMMA list .) ]
  ! OR              [ reduce using rule 28 (list -> list COMMA list .) ]


state 19

    (29) list -> list AND NAME .

    FROM            reduce using rule 29 (list -> list AND NAME .)
    COMMA           reduce using rule 29 (list -> list AND NAME .)
    AND             reduce using rule 29 (list -> list AND NAME .)
    OR              reduce using rule 29 (list -> list AND NAME .)
    >               reduce using rule 29 (list -> list AND NAME .)
    <               reduce using rule 29 (list -> list AND NAME .)
    =               reduce using rule 29 (list -> list AND NAME .)
    $end            reduce using rule 29 (list -> list AND NAME .)
    RP              reduce using rule 29 (list -> list AND NAME .)


state 20

    (30) list -> list OR NAME .

    FROM            reduce using rule 30 (list -> list OR NAME .)
    COMMA           reduce using rule 30 (list -> list OR NAME .)
    AND             reduce using rule 30 (list -> list OR NAME .)
    OR              reduce using rule 30 (list -> list OR NAME .)
    >               reduce using rule 30 (list -> list OR NAME .)
    <               reduce using rule 30 (list -> list OR NAME .)
    =               reduce using rule 30 (list -> list OR NAME .)
    $end            reduce using rule 30 (list -> list OR NAME .)
    RP              reduce using rule 30 (list -> list OR NAME .)


state 21

    (27) list -> NAME DOT NAME .

    FROM            reduce using rule 27 (list -> NAME DOT NAME .)
    COMMA           reduce using rule 27 (list -> NAME DOT NAME .)
    AND             reduce using rule 27 (list -> NAME DOT NAME .)
    OR              reduce using rule 27 (list -> NAME DOT NAME .)
    >               reduce using rule 27 (list -> NAME DOT NAME .)
    <               reduce using rule 27 (list -> NAME DOT NAME .)
    =               reduce using rule 27 (list -> NAME DOT NAME .)
    $end            reduce using rule 27 (list -> NAME DOT NAME .)
    RP              reduce using rule 27 (list -> NAME DOT NAME .)


state 22

    (3) select -> SELECT list FROM table WHERE . lst
    (9) lst -> . condition
    (10) lst -> . condition AND condition
    (11) lst -> . condition OR condition
    (12) lst -> . NAME BETWEEN NUMBER AND NUMBER
    (13) condition -> . NAME > NUMBER
    (14) condition -> . NAME < NUMBER
    (15) condition -> . NAME = NUMBER
    (16) condition -> . NAME > NAME
    (17) condition -> . NAME < NAME
    (18) condition -> . NAME = NAME
    (19) condition -> . list > list
    (20) condition -> . list < list
    (21) condition -> . list = list
    (22) condition -> . list > NUMBER
    (23) condition -> . list < NUMBER
    (24) condition -> . list = NUMBER
    (25) list -> . *
    (26) list -> . NAME
    (27) list -> . NAME DOT NAME
    (28) list -> . list COMMA list
    (29) list -> . list AND NAME
    (30) list -> . list OR NAME

    NAME            shift and go to state 29
    *               shift and go to state 7

    list                           shift and go to state 26
    lst                            shift and go to state 27
    condition                      shift and go to state 28

state 23

    (8) table -> table AS . NAME

    NAME            shift and go to state 30


state 24

    (7) table -> NAME AS . NAME

    NAME            shift and go to state 31


state 25

    (6) table -> LP query . RP

    RP              shift and go to state 32


state 26

    (19) condition -> list . > list
    (20) condition -> list . < list
    (21) condition -> list . = list
    (22) condition -> list . > NUMBER
    (23) condition -> list . < NUMBER
    (24) condition -> list . = NUMBER
    (28) list -> list . COMMA list
    (29) list -> list . AND NAME
    (30) list -> list . OR NAME

    >               shift and go to state 33
    <               shift and go to state 34
    =               shift and go to state 35
    COMMA           shift and go to state 11
    AND             shift and go to state 12
    OR              shift and go to state 13


state 27

    (3) select -> SELECT list FROM table WHERE lst .

    $end            reduce using rule 3 (select -> SELECT list FROM table WHERE lst .)
    RP              reduce using rule 3 (select -> SELECT list FROM table WHERE lst .)


state 28

    (9) lst -> condition .
    (10) lst -> condition . AND condition
    (11) lst -> condition . OR condition

    $end            reduce using rule 9 (lst -> condition .)
    RP              reduce using rule 9 (lst -> condition .)
    AND             shift and go to state 36
    OR              shift and go to state 37


state 29

    (12) lst -> NAME . BETWEEN NUMBER AND NUMBER
    (13) condition -> NAME . > NUMBER
    (14) condition -> NAME . < NUMBER
    (15) condition -> NAME . = NUMBER
    (16) condition -> NAME . > NAME
    (17) condition -> NAME . < NAME
    (18) condition -> NAME . = NAME
    (26) list -> NAME .
    (27) list -> NAME . DOT NAME

  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for = resolved as shift
    BETWEEN         shift and go to state 38
    >               shift and go to state 39
    <               shift and go to state 40
    =               shift and go to state 41
    COMMA           reduce using rule 26 (list -> NAME .)
    AND             reduce using rule 26 (list -> NAME .)
    OR              reduce using rule 26 (list -> NAME .)
    DOT             shift and go to state 14

  ! >               [ reduce using rule 26 (list -> NAME .) ]
  ! <               [ reduce using rule 26 (list -> NAME .) ]
  ! =               [ reduce using rule 26 (list -> NAME .) ]


state 30

    (8) table -> table AS NAME .

    WHERE           reduce using rule 8 (table -> table AS NAME .)
    AS              reduce using rule 8 (table -> table AS NAME .)
    $end            reduce using rule 8 (table -> table AS NAME .)
    RP              reduce using rule 8 (table -> table AS NAME .)


state 31

    (7) table -> NAME AS NAME .

    WHERE           reduce using rule 7 (table -> NAME AS NAME .)
    AS              reduce using rule 7 (table -> NAME AS NAME .)
    $end            reduce using rule 7 (table -> NAME AS NAME .)
    RP              reduce using rule 7 (table -> NAME AS NAME .)


state 32

    (6) table -> LP query RP .

    WHERE           reduce using rule 6 (table -> LP query RP .)
    AS              reduce using rule 6 (table -> LP query RP .)
    $end            reduce using rule 6 (table -> LP query RP .)
    RP              reduce using rule 6 (table -> LP query RP .)


state 33

    (19) condition -> list > . list
    (22) condition -> list > . NUMBER
    (25) list -> . *
    (26) list -> . NAME
    (27) list -> . NAME DOT NAME
    (28) list -> . list COMMA list
    (29) list -> . list AND NAME
    (30) list -> . list OR NAME

    NUMBER          shift and go to state 43
    *               shift and go to state 7
    NAME            shift and go to state 8

    list                           shift and go to state 42

state 34

    (20) condition -> list < . list
    (23) condition -> list < . NUMBER
    (25) list -> . *
    (26) list -> . NAME
    (27) list -> . NAME DOT NAME
    (28) list -> . list COMMA list
    (29) list -> . list AND NAME
    (30) list -> . list OR NAME

    NUMBER          shift and go to state 45
    *               shift and go to state 7
    NAME            shift and go to state 8

    list                           shift and go to state 44

state 35

    (21) condition -> list = . list
    (24) condition -> list = . NUMBER
    (25) list -> . *
    (26) list -> . NAME
    (27) list -> . NAME DOT NAME
    (28) list -> . list COMMA list
    (29) list -> . list AND NAME
    (30) list -> . list OR NAME

    NUMBER          shift and go to state 47
    *               shift and go to state 7
    NAME            shift and go to state 8

    list                           shift and go to state 46

state 36

    (10) lst -> condition AND . condition
    (13) condition -> . NAME > NUMBER
    (14) condition -> . NAME < NUMBER
    (15) condition -> . NAME = NUMBER
    (16) condition -> . NAME > NAME
    (17) condition -> . NAME < NAME
    (18) condition -> . NAME = NAME
    (19) condition -> . list > list
    (20) condition -> . list < list
    (21) condition -> . list = list
    (22) condition -> . list > NUMBER
    (23) condition -> . list < NUMBER
    (24) condition -> . list = NUMBER
    (25) list -> . *
    (26) list -> . NAME
    (27) list -> . NAME DOT NAME
    (28) list -> . list COMMA list
    (29) list -> . list AND NAME
    (30) list -> . list OR NAME

    NAME            shift and go to state 49
    *               shift and go to state 7

    condition                      shift and go to state 48
    list                           shift and go to state 26

state 37

    (11) lst -> condition OR . condition
    (13) condition -> . NAME > NUMBER
    (14) condition -> . NAME < NUMBER
    (15) condition -> . NAME = NUMBER
    (16) condition -> . NAME > NAME
    (17) condition -> . NAME < NAME
    (18) condition -> . NAME = NAME
    (19) condition -> . list > list
    (20) condition -> . list < list
    (21) condition -> . list = list
    (22) condition -> . list > NUMBER
    (23) condition -> . list < NUMBER
    (24) condition -> . list = NUMBER
    (25) list -> . *
    (26) list -> . NAME
    (27) list -> . NAME DOT NAME
    (28) list -> . list COMMA list
    (29) list -> . list AND NAME
    (30) list -> . list OR NAME

    NAME            shift and go to state 49
    *               shift and go to state 7

    condition                      shift and go to state 50
    list                           shift and go to state 26

state 38

    (12) lst -> NAME BETWEEN . NUMBER AND NUMBER

    NUMBER          shift and go to state 51


state 39

    (13) condition -> NAME > . NUMBER
    (16) condition -> NAME > . NAME

    NUMBER          shift and go to state 53
    NAME            shift and go to state 52


state 40

    (14) condition -> NAME < . NUMBER
    (17) condition -> NAME < . NAME

    NUMBER          shift and go to state 55
    NAME            shift and go to state 54


state 41

    (15) condition -> NAME = . NUMBER
    (18) condition -> NAME = . NAME

    NUMBER          shift and go to state 57
    NAME            shift and go to state 56


state 42

    (19) condition -> list > list .
    (28) list -> list . COMMA list
    (29) list -> list . AND NAME
    (30) list -> list . OR NAME

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 19 (condition -> list > list .)
    RP              reduce using rule 19 (condition -> list > list .)
    COMMA           shift and go to state 11
    AND             shift and go to state 12
    OR              shift and go to state 13

  ! AND             [ reduce using rule 19 (condition -> list > list .) ]
  ! OR              [ reduce using rule 19 (condition -> list > list .) ]


state 43

    (22) condition -> list > NUMBER .

    AND             reduce using rule 22 (condition -> list > NUMBER .)
    OR              reduce using rule 22 (condition -> list > NUMBER .)
    $end            reduce using rule 22 (condition -> list > NUMBER .)
    RP              reduce using rule 22 (condition -> list > NUMBER .)


state 44

    (20) condition -> list < list .
    (28) list -> list . COMMA list
    (29) list -> list . AND NAME
    (30) list -> list . OR NAME

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 20 (condition -> list < list .)
    RP              reduce using rule 20 (condition -> list < list .)
    COMMA           shift and go to state 11
    AND             shift and go to state 12
    OR              shift and go to state 13

  ! AND             [ reduce using rule 20 (condition -> list < list .) ]
  ! OR              [ reduce using rule 20 (condition -> list < list .) ]


state 45

    (23) condition -> list < NUMBER .

    AND             reduce using rule 23 (condition -> list < NUMBER .)
    OR              reduce using rule 23 (condition -> list < NUMBER .)
    $end            reduce using rule 23 (condition -> list < NUMBER .)
    RP              reduce using rule 23 (condition -> list < NUMBER .)


state 46

    (21) condition -> list = list .
    (28) list -> list . COMMA list
    (29) list -> list . AND NAME
    (30) list -> list . OR NAME

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 21 (condition -> list = list .)
    RP              reduce using rule 21 (condition -> list = list .)
    COMMA           shift and go to state 11
    AND             shift and go to state 12
    OR              shift and go to state 13

  ! AND             [ reduce using rule 21 (condition -> list = list .) ]
  ! OR              [ reduce using rule 21 (condition -> list = list .) ]


state 47

    (24) condition -> list = NUMBER .

    AND             reduce using rule 24 (condition -> list = NUMBER .)
    OR              reduce using rule 24 (condition -> list = NUMBER .)
    $end            reduce using rule 24 (condition -> list = NUMBER .)
    RP              reduce using rule 24 (condition -> list = NUMBER .)


state 48

    (10) lst -> condition AND condition .

    $end            reduce using rule 10 (lst -> condition AND condition .)
    RP              reduce using rule 10 (lst -> condition AND condition .)


state 49

    (13) condition -> NAME . > NUMBER
    (14) condition -> NAME . < NUMBER
    (15) condition -> NAME . = NUMBER
    (16) condition -> NAME . > NAME
    (17) condition -> NAME . < NAME
    (18) condition -> NAME . = NAME
    (26) list -> NAME .
    (27) list -> NAME . DOT NAME

  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for = resolved as shift
    >               shift and go to state 39
    <               shift and go to state 40
    =               shift and go to state 41
    COMMA           reduce using rule 26 (list -> NAME .)
    AND             reduce using rule 26 (list -> NAME .)
    OR              reduce using rule 26 (list -> NAME .)
    DOT             shift and go to state 14

  ! >               [ reduce using rule 26 (list -> NAME .) ]
  ! <               [ reduce using rule 26 (list -> NAME .) ]
  ! =               [ reduce using rule 26 (list -> NAME .) ]


state 50

    (11) lst -> condition OR condition .

    $end            reduce using rule 11 (lst -> condition OR condition .)
    RP              reduce using rule 11 (lst -> condition OR condition .)


state 51

    (12) lst -> NAME BETWEEN NUMBER . AND NUMBER

    AND             shift and go to state 58


state 52

    (16) condition -> NAME > NAME .

    AND             reduce using rule 16 (condition -> NAME > NAME .)
    OR              reduce using rule 16 (condition -> NAME > NAME .)
    $end            reduce using rule 16 (condition -> NAME > NAME .)
    RP              reduce using rule 16 (condition -> NAME > NAME .)


state 53

    (13) condition -> NAME > NUMBER .

    AND             reduce using rule 13 (condition -> NAME > NUMBER .)
    OR              reduce using rule 13 (condition -> NAME > NUMBER .)
    $end            reduce using rule 13 (condition -> NAME > NUMBER .)
    RP              reduce using rule 13 (condition -> NAME > NUMBER .)


state 54

    (17) condition -> NAME < NAME .

    AND             reduce using rule 17 (condition -> NAME < NAME .)
    OR              reduce using rule 17 (condition -> NAME < NAME .)
    $end            reduce using rule 17 (condition -> NAME < NAME .)
    RP              reduce using rule 17 (condition -> NAME < NAME .)


state 55

    (14) condition -> NAME < NUMBER .

    AND             reduce using rule 14 (condition -> NAME < NUMBER .)
    OR              reduce using rule 14 (condition -> NAME < NUMBER .)
    $end            reduce using rule 14 (condition -> NAME < NUMBER .)
    RP              reduce using rule 14 (condition -> NAME < NUMBER .)


state 56

    (18) condition -> NAME = NAME .

    AND             reduce using rule 18 (condition -> NAME = NAME .)
    OR              reduce using rule 18 (condition -> NAME = NAME .)
    $end            reduce using rule 18 (condition -> NAME = NAME .)
    RP              reduce using rule 18 (condition -> NAME = NAME .)


state 57

    (15) condition -> NAME = NUMBER .

    AND             reduce using rule 15 (condition -> NAME = NUMBER .)
    OR              reduce using rule 15 (condition -> NAME = NUMBER .)
    $end            reduce using rule 15 (condition -> NAME = NUMBER .)
    RP              reduce using rule 15 (condition -> NAME = NUMBER .)


state 58

    (12) lst -> NAME BETWEEN NUMBER AND . NUMBER

    NUMBER          shift and go to state 59


state 59

    (12) lst -> NAME BETWEEN NUMBER AND NUMBER .

    $end            reduce using rule 12 (lst -> NAME BETWEEN NUMBER AND NUMBER .)
    RP              reduce using rule 12 (lst -> NAME BETWEEN NUMBER AND NUMBER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AS in state 16 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 18 resolved as shift
WARNING: shift/reduce conflict for AND in state 18 resolved as shift
WARNING: shift/reduce conflict for OR in state 18 resolved as shift
WARNING: shift/reduce conflict for > in state 29 resolved as shift
WARNING: shift/reduce conflict for < in state 29 resolved as shift
WARNING: shift/reduce conflict for = in state 29 resolved as shift
WARNING: shift/reduce conflict for AND in state 42 resolved as shift
WARNING: shift/reduce conflict for OR in state 42 resolved as shift
WARNING: shift/reduce conflict for AND in state 44 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for AND in state 46 resolved as shift
WARNING: shift/reduce conflict for OR in state 46 resolved as shift
WARNING: shift/reduce conflict for > in state 49 resolved as shift
WARNING: shift/reduce conflict for < in state 49 resolved as shift
WARNING: shift/reduce conflict for = in state 49 resolved as shift
